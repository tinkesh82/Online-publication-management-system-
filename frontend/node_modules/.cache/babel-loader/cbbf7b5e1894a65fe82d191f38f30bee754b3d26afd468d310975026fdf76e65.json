{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\trial\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\EditPublicationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport publicationService from \"../../api/publicationService\";\nimport PublicationForm from \"../../components/PublicationForm\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPublicationPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [initialData, setInitialData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false); // For submission\n  const [pageLoading, setPageLoading] = useState(true); // For fetching initial data\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const fetchPublicationData = useCallback(async () => {\n    setPageLoading(true);\n    try {\n      const response = await publicationService.getPublicationById(id);\n      if (response.success) {\n        var _pubData$publisher;\n        const pubData = response.data;\n        // Authorization check: only owner or admin can edit\n        const isOwner = (user === null || user === void 0 ? void 0 : user._id) === ((_pubData$publisher = pubData.publisher) === null || _pubData$publisher === void 0 ? void 0 : _pubData$publisher._id);\n        const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === \"admin\";\n        const canEdit = isOwner && [\"pending_review\", \"needs_correction\"].includes(pubData.status) || isAdmin;\n        if (!canEdit) {\n          setError(\"You are not authorized to edit this publication or it's not in an editable state.\");\n          setInitialData(null); // Prevent form rendering\n          return;\n        }\n        setInitialData(pubData);\n      } else {\n        setError(response.message || \"Failed to fetch publication data.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error fetching publication.\");\n    } finally {\n      setPageLoading(false);\n    }\n  }, [id, user]);\n  useEffect(() => {\n    fetchPublicationData();\n  }, [fetchPublicationData]);\n  const handleSubmit = async formData => {\n    setIsLoading(true);\n    setError(\"\");\n    setSuccessMessage(\"\");\n    try {\n      const response = await publicationService.updatePublication(id, formData);\n      if (response.success) {\n        setSuccessMessage(\"Publication updated successfully!\");\n        setTimeout(() => {\n          navigate(`/publications/${id}`); // Or to my-publications\n        }, 2000);\n      } else {\n        setError(response.message || \"Failed to update publication.\");\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"An error occurred during update.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (pageLoading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Publication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && !initialData && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }, this), \" \", initialData ? /*#__PURE__*/_jsxDEV(PublicationForm, {\n      onSubmit: handleSubmit,\n      initialData: initialData,\n      isLoading: isLoading,\n      error: error && initialData ? error : \"\" // Show form-specific error\n      ,\n      successMessage: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading publication data or publication not found/editable...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPublicationPage, \"ofkzgEIVTDI5yumaPtaxwN4YBek=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = EditPublicationPage;\nexport default EditPublicationPage;\nvar _c;\n$RefreshReg$(_c, \"EditPublicationPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","publicationService","PublicationForm","LoadingSpinner","useAuth","jsxDEV","_jsxDEV","EditPublicationPage","_s","id","navigate","user","initialData","setInitialData","isLoading","setIsLoading","pageLoading","setPageLoading","error","setError","successMessage","setSuccessMessage","fetchPublicationData","response","getPublicationById","success","_pubData$publisher","pubData","data","isOwner","_id","publisher","isAdmin","role","canEdit","includes","status","message","err","_err$response","_err$response$data","handleSubmit","formData","updatePublication","setTimeout","_err$response2","_err$response2$data","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/trial/frontend/src/pages/Dashboard/EditPublicationPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport publicationService from \"../../api/publicationService\";\r\nimport PublicationForm from \"../../components/PublicationForm\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nconst EditPublicationPage = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n  const [initialData, setInitialData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false); // For submission\r\n  const [pageLoading, setPageLoading] = useState(true); // For fetching initial data\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const fetchPublicationData = useCallback(async () => {\r\n    setPageLoading(true);\r\n    try {\r\n      const response = await publicationService.getPublicationById(id);\r\n      if (response.success) {\r\n        const pubData = response.data;\r\n        // Authorization check: only owner or admin can edit\r\n        const isOwner = user?._id === pubData.publisher?._id;\r\n        const isAdmin = user?.role === \"admin\";\r\n        const canEdit =\r\n          (isOwner &&\r\n            [\"pending_review\", \"needs_correction\"].includes(pubData.status)) ||\r\n          isAdmin;\r\n\r\n        if (!canEdit) {\r\n          setError(\r\n            \"You are not authorized to edit this publication or it's not in an editable state.\"\r\n          );\r\n          setInitialData(null); // Prevent form rendering\r\n          return;\r\n        }\r\n        setInitialData(pubData);\r\n      } else {\r\n        setError(response.message || \"Failed to fetch publication data.\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Error fetching publication.\");\r\n    } finally {\r\n      setPageLoading(false);\r\n    }\r\n  }, [id, user]);\r\n\r\n  useEffect(() => {\r\n    fetchPublicationData();\r\n  }, [fetchPublicationData]);\r\n\r\n  const handleSubmit = async (formData) => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n    try {\r\n      const response = await publicationService.updatePublication(id, formData);\r\n      if (response.success) {\r\n        setSuccessMessage(\"Publication updated successfully!\");\r\n        setTimeout(() => {\r\n          navigate(`/publications/${id}`); // Or to my-publications\r\n        }, 2000);\r\n      } else {\r\n        setError(response.message || \"Failed to update publication.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\r\n        err.response?.data?.message || \"An error occurred during update.\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (pageLoading) return <LoadingSpinner />;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Edit Publication</h1>\r\n      {error && !initialData && <p className=\"error-message\">{error}</p>}{\" \"}\r\n      {/* Show main error if no form */}\r\n      {initialData ? (\r\n        <PublicationForm\r\n          onSubmit={handleSubmit}\r\n          initialData={initialData}\r\n          isLoading={isLoading}\r\n          error={error && initialData ? error : \"\"} // Show form-specific error\r\n          successMessage={successMessage}\r\n        />\r\n      ) : (\r\n        !error && (\r\n          <p>Loading publication data or publication not found/editable...</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPublicationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}