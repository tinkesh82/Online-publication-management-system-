{"ast":null,"code":"export const formatDate = dateString => {\n  if (!dateString) return \"N/A\";\n  try {\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  } catch (error) {\n    console.error(\"Error formatting date:\", dateString, error);\n    return dateString; // fallback to original string if parsing fails\n  }\n};","map":{"version":3,"names":["formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","error","console"],"sources":["C:/Users/DELL/Desktop/trial/frontend/src/utils/formatDate.js"],"sourcesContent":["export const formatDate = (dateString) => {\r\n  if (!dateString) return \"N/A\";\r\n  try {\r\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  } catch (error) {\r\n    console.error(\"Error formatting date:\", dateString, error);\r\n    return dateString; // fallback to original string if parsing fails\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,UAAU,IAAK;EACxC,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK;EAC7B,IAAI;IACF,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAU,CAAC;IAClE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;EACpE,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAER,UAAU,EAAEQ,KAAK,CAAC;IAC1D,OAAOR,UAAU,CAAC,CAAC;EACrB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}