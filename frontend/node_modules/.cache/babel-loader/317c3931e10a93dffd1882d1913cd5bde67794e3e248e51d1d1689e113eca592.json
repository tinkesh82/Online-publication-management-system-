{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\trial\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\AdminAddUserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport userService from \"../../api/userService\"; // Using addReviewer specifically for now\nimport useAuth from \"../../hooks/useAuth\"; // To check if admin is adding for role setting logic on backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminAddUserPage = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"reviewer\"); // Default to reviewer for this form\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    user: adminUser\n  } = useAuth(); // The logged-in admin\n\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccessMessage(\"\");\n    setLoading(true);\n\n    // The backend `registerUser` route allows admin to specify role.\n    // The backend `addReviewer` route specifically creates a user with 'reviewer' role.\n    // We'll use `addReviewer` if role is 'reviewer', otherwise we'd need a more general admin user creation endpoint.\n    // For simplicity, this form primarily targets adding reviewers.\n    // If you need to add users with other roles, the backend `register` needs to be hit with admin privileges.\n    // Or enhance userService.addUser and its backend counterpart.\n\n    let userData = {\n      username,\n      email,\n      password\n    };\n    try {\n      let response;\n      if (role === \"reviewer\") {\n        response = await userService.addReviewer(userData); //This creates a reviewer directly\n      } else {\n        // For other roles, ideally call a general admin-create-user endpoint\n        // or use the main registration endpoint if it's configured to allow admins to set roles.\n        // The current backend's /api/auth/register will create a 'user' unless an admin is logged in AND passes 'role'\n        // This frontend uses a dedicated /api/users/add-reviewer for reviewers.\n        // So, to add an 'admin' or 'user' via this form, the backend's 'register' route logic needs to be leveraged.\n        // For this example, we'll just stick to adding reviewers as it's explicitly supported by a backend route.\n        setError(\"This form is currently configured to add Reviewers. To add other roles, backend adjustments for a general admin user creation endpoint might be needed, or use the main registration and then edit role.\");\n        setLoading(false);\n        return;\n      }\n      if (response.success) {\n        setSuccessMessage(`${role.charAt(0).toUpperCase() + role.slice(1)} '${username}' added successfully!`);\n        setUsername(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setTimeout(() => navigate(\"/admin/users\"), 2000);\n      } else {\n        setError(response.message || `Failed to add ${role}.`);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || `Error adding ${role}.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New User/Reviewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password (min 6 characters) *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role * (Currently supports Reviewer directly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"role\",\n          value: role,\n          onChange: e => setRole(e.target.value),\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"reviewer\",\n            children: \"Reviewer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"To add 'user' or 'admin', use main registration and edit role, or backend needs general admin user creation.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Adding...\" : `Add ${role.charAt(0).toUpperCase() + role.slice(1)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminAddUserPage, \"MB84vAy3D7V+qkOotmC5Z00SXg8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AdminAddUserPage;\nexport default AdminAddUserPage;\nvar _c;\n$RefreshReg$(_c, \"AdminAddUserPage\");","map":{"version":3,"names":["React","useState","useNavigate","userService","useAuth","jsxDEV","_jsxDEV","AdminAddUserPage","_s","username","setUsername","email","setEmail","password","setPassword","role","setRole","error","setError","successMessage","setSuccessMessage","loading","setLoading","user","adminUser","navigate","handleSubmit","e","preventDefault","userData","response","addReviewer","success","charAt","toUpperCase","slice","setTimeout","message","err","_err$response","_err$response$data","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","minLength","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/trial/frontend/src/pages/Dashboard/AdminAddUserPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport userService from \"../../api/userService\"; // Using addReviewer specifically for now\r\nimport useAuth from \"../../hooks/useAuth\"; // To check if admin is adding for role setting logic on backend\r\n\r\nconst AdminAddUserPage = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"reviewer\"); // Default to reviewer for this form\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { user: adminUser } = useAuth(); // The logged-in admin\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccessMessage(\"\");\r\n    setLoading(true);\r\n\r\n    // The backend `registerUser` route allows admin to specify role.\r\n    // The backend `addReviewer` route specifically creates a user with 'reviewer' role.\r\n    // We'll use `addReviewer` if role is 'reviewer', otherwise we'd need a more general admin user creation endpoint.\r\n    // For simplicity, this form primarily targets adding reviewers.\r\n    // If you need to add users with other roles, the backend `register` needs to be hit with admin privileges.\r\n    // Or enhance userService.addUser and its backend counterpart.\r\n\r\n    let userData = { username, email, password };\r\n\r\n    try {\r\n      let response;\r\n      if (role === \"reviewer\") {\r\n        response = await userService.addReviewer(userData); //This creates a reviewer directly\r\n      } else {\r\n        // For other roles, ideally call a general admin-create-user endpoint\r\n        // or use the main registration endpoint if it's configured to allow admins to set roles.\r\n        // The current backend's /api/auth/register will create a 'user' unless an admin is logged in AND passes 'role'\r\n        // This frontend uses a dedicated /api/users/add-reviewer for reviewers.\r\n        // So, to add an 'admin' or 'user' via this form, the backend's 'register' route logic needs to be leveraged.\r\n        // For this example, we'll just stick to adding reviewers as it's explicitly supported by a backend route.\r\n        setError(\r\n          \"This form is currently configured to add Reviewers. To add other roles, backend adjustments for a general admin user creation endpoint might be needed, or use the main registration and then edit role.\"\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (response.success) {\r\n        setSuccessMessage(\r\n          `${\r\n            role.charAt(0).toUpperCase() + role.slice(1)\r\n          } '${username}' added successfully!`\r\n        );\r\n        setUsername(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setTimeout(() => navigate(\"/admin/users\"), 2000);\r\n      } else {\r\n        setError(response.message || `Failed to add ${role}.`);\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || `Error adding ${role}.`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1>Add New User/Reviewer</h1>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email *</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password (min 6 characters) *</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"role\">\r\n            Role * (Currently supports Reviewer directly)\r\n          </label>\r\n          <select\r\n            id=\"role\"\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n            required\r\n          >\r\n            {/* <option value=\"user\">User</option> */}\r\n            <option value=\"reviewer\">Reviewer</option>\r\n            {/* <option value=\"admin\">Admin</option> */}\r\n          </select>\r\n          <small>\r\n            To add 'user' or 'admin', use main registration and edit role, or\r\n            backend needs general admin user creation.\r\n          </small>\r\n        </div>\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading\r\n            ? \"Adding...\"\r\n            : `Add ${role.charAt(0).toUpperCase() + role.slice(1)}`}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAddUserPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}